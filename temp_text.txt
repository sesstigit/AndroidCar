Link to connection diagrams
JY-MCU Bluetooth board.
The arduino is an MEGA-2560 Rev3
servo motor (steering)
 - Razor IMU gives magnetometer, gyro, and accelerometer for 9dof.
 - infrared for distance
 - sonar for distance
 - electronic speed encoder attached to one wheel (speed)

## Changes
Omitted the Quad 2-input OR gate IC (74HC32) SN74LS32N.  Instead all the data wires from the infrared sensors are sent to the Arduino analog inputs.  Note: this requires slight code modification to perform the OR operation on the Arduino to support lane detection.


# Debugging Arduino Code
To debug arduino code, send information to the serial port for viewing on a computer (in the Arduino IDE).
> void  setup()
> {
>   Serial.begin(9600);
>   Serial.println("Hello world");
>   delay(2000);// Give reader a chance to see the output.
> }

Then can do Serial.println(variable) anywhere in the code.
Can put in #defines so the serial monitoring can be turned on/off
> #ifdef TRACE1
> #define trace1(s) serial.print(s)
> #define traceln1(s) serial.println(s)
> #else
> #define trace1(s)
> #define traceln1(s)
> #endif

### Infrared
Infrared sensors under car for line tracking have 5 pins: 3 for the IR sensors, plus power and ground.  Check I have 5 connected?
 - here is some sample code to check the sensors: http://arduinolearning.com/code/3-channel-tracking-sensor-example.php
 - but I can't find code for line tracking.
 - both the old and new projects do not include code for using the infrared sensors: https://github.com/platisd/smartcar_shield/ and https://github.com/platisd/AndroidCar
 - in fact, both projects are very similar.  They haven't moved much.

The Infrared sensors under the bumper are:
- funduino TCRT5000 3-channel IR sensors

Most similar form factor I can see is:
http://www.fut-electronics.com/wp-content/plugins/fe_downloads/Uploads/3way_line_tracker_sensor_tutorial.pdf

The 5 pins are just: VCC, L, C, R, GND
We just don't have C (center) connected.  But that is OK I think.

Some more advanced information is here:
http://www.instructables.com/id/Using-IR-Sensor-TCRT-5000-With-Arduino-and-Program/
with the datasheet: https://www.vishay.com/docs/83760/tcrt5000.pdf

### Gyro
The gyro code is weird.

I managed to get readings from the gyro when using the alternative gyro code (from another website).  The standard gyro code hangs during the gyro update function.  Also it only reads the z axis and skips the other two!

It is confusing whether I need to use pull-up resistors or whether they are included on the board.

The other confusing thing is whether pins CS and SDO need to be high or not.

Lastly it is confusing about drift and what the output should be - an absolute angle or what?

Note the datasheet says the input voltage must be 3.3v, but I don't know whether this version has a voltage regulator. Probably not.

Todo:
- resolder properly with headers
- add grounding as per datasheet ( or does this board already do that?)
- add pull up resistors if required
- chose which software to use and update the Android library accordingly.
- which measurement is returned and how is it used?

Here is how to make it communicate over SPI, with example source code.  It is interesting that is specifically uses interrupts to determine when data is ready to read.  I don't have those pins connected!
https://github.com/sparkfun/Tri-Axis_Gyro_Breakout-L3G4200D/blob/V_1.0/Firmware/L3G4200D_Example/L3G4200D_Example.pde

Also this board of the L3G4200D has a voltage regulator and drives all the other pins by default.  Easy to use.
https://www.pololu.com/product/1272

Example code for that board is https://github.com/pololu/l3g-arduino
